文件路径: src\app.js
文件名: app.js
文件内容:
const express = require('express');
const hbs = require('hbs');
const route = require('./routers/main');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const session = require('express-session');
const fileUpload = require('express-fileupload');
const path = require('path');
const { handlebars } = require('hbs');
require("./handlebar"); // User-made handlebars

const app = express();

app.use(fileUpload());
app.use(session({
    secret: "restorent_datails",
    resave: false,
    saveUninitialized: true
}));
app.use(bodyParser.urlencoded({
    extended: true
}));

app.use('', route);

// Static folder
app.use(express.static(path.join(__dirname, 'public')));
app.use("/static", express.static("public"));

// Template engine
app.set("view engine", 'hbs');
app.set("views", path.join(__dirname, 'views')); // Ensure correct path
hbs.registerPartials(path.join(__dirname, 'views', 'partials')); // Ensure correct path

mongoose.connect("mongodb://127.0.0.1:27017/foodOrderingSystem", { useNewUrlParser: true, useUnifiedTopology: true })
    .then(() => {
        console.log("Server connected to MongoDB successfully.");
    })
    .catch((err) => {
        console.error("Failed to connect to MongoDB. Error:", err);
    });

// Mongoose connection events
const db = mongoose.connection;

db.on("connected", () => {
    console.log("Mongoose connected to MongoDB.");
});

db.on("error", (err) => {
    console.error("Mongoose connection error:", err);
});

db.on("disconnected", () => {
    console.log("Mongoose connection disconnected.");
});

// Handle process termination
process.on("SIGINT", async () => {
    await db.close();
    console.log("Mongoose connection closed due to app termination.");
    process.exit(0);
});

app.listen(5656, () => {
    console.log('Server is running on port 5656...');
});

==================================================
文件路径: src\demo.js
文件名: demo.js
文件内容:
const express = require("express");
const app = express();

app.get("/", (req, res) => {
    res.send("<h2>HI</h2>");
    console.log("Hello");
});

app.listen(3232, () => {
    console.log("Demo server is running on port 3232...");
});

==================================================
文件路径: src\handlebar.js
文件名: handlebar.js
文件内容:
const { handlebars } = require("hbs");

// Register existing helpers
handlebars.registerHelper('times', function (n, block) {
    var accum = '';
    for (var i = 1; i <= n; i++)
        accum += block.fn(i);
    return accum;
});
handlebars.registerHelper('nextPage', function (n, block) {
    return Number(n) + 1;
});
handlebars.registerHelper('prevPage', function (n, block) {
    return Number(n) - 1;
});
handlebars.registerHelper('ifnext', function (currentPage, endPage, block) {
    if (Number(currentPage) >= Number(endPage))
        return 'disabled';
    else
        return false;
});
handlebars.registerHelper('ifprev', function (currentPage, block) {
    console.log(currentPage);
    if (Number(currentPage) <= 1)
        return 'disabled';
    else
        return false;
});
handlebars.registerHelper("active", function (active, currentPage, block) {
    console.log(active + " :: " + currentPage);
    if (active == currentPage)
        return 'active';
    else
        return false;
});
handlebars.registerHelper('json', function (context) {
    return JSON.stringify(context).replace(/"/g, '&quot;');
});
handlebars.registerHelper('discount', function (price, discount, block) {
    console.log("discount is " + (price - ((price * discount) / 100)));

    let discountPrice = parseFloat(price - ((price * discount) / 100)).toFixed(2);
    console.log(price + "%" + discount + " discount price is : " + discountPrice);
    return discountPrice;
});
handlebars.registerHelper("ifStates", function (states, id, block) {
    console.log(states);
    if (states === "NA") {
        return '<td><a href="/admin/cooking/' + id + '" class="btn states-btn btn-outline-success btn-sm">Cooking</a></td>';
    } else if (states === "Cooking") {
        return '<td><a href="/admin/deliver/' + id + '" class="btn states-btn btn-outline-warning btn-sm ">Deliver</a></td>';
    } else if (states === "Out for delivery.") {
        return '<td><a href="/admin/handover/' + id + '" class="btn states-btn btn-outline-danger btn-sm">Handover</a></td>';
    } else {
        return '<td><a class="btn btn-outline-dark states-btn btn-sm disabled">Completed</a></td>';
    }
});
handlebars.registerHelper("ifCancelOrder", function (states, id, block) {
    if (states === "NA") {
        return '<a href="/user/cancelOrder/' + id + '" class="main-btn">Cancel order</a>';
    }
});
handlebars.registerHelper('eq', function (a, b) { // 新增 helper: eq
    return a === b;
});

==================================================
文件路径: src\modul\dish.js
文件名: dish.js
文件内容:
const mongoose=require("mongoose")
const dish=mongoose.Schema({
    dname:String,
    dtype:String,
    dprice:Number,
    dtime:String,
    photo:String,
    discription:String,
    ddiscount:Number,
    dserve:Number
})
module.exports=mongoose.model("dish",dish)
==================================================
文件路径: src\modul\order.js
文件名: order.js
文件内容:
const mongoose = require('mongoose');

const order = mongoose.Schema({
    dishId: String,
    userId: String,
    time: String,
    pickupTime: String, // 新增字段: 取餐时间
    specialRequests: String, // 新增字段: 特殊需求
    photo: String,
    dname: String,
    price: Number,
    quantity: Number,
    paymentType: String,
    states: String,
    user: Object,
});

module.exports = mongoose.model("orders", order);

==================================================
文件路径: src\modul\user.js
文件名: user.js
文件内容:
const mongoose = require('mongoose');

const User = mongoose.Schema({
    name: String,
    email: String,
    phone: String,
    password: String,
    address: String,
    type: {
        type: String,
        enum: ['normal', 'admin', 'employee'], // Added 'employee' role
        default: 'normal' // 默认值是 'normal'
    },
});

module.exports = mongoose.model("user", User);

==================================================
文件路径: src\routers\main.js
文件名: main.js
文件内容:
const { Router } = require('express');
const express = require('express');
const session = require('express-session');
const route = express.Router();
const path = require('path');
const User = require('../modul/user');
const dish = require("../modul/dish");
const order = require('../modul/order');
const { __express } = require('hbs');
const fs = require('fs');

route.get("/", (req, res) => {
    const loginUser = req.session.loginUser;
    res.render("index", {
        loginUser: loginUser
    });
});

route.get("/register", (req, res) => {
    const loginUser = req.session.loginUser;
    res.render("registration", {
        loginUser: loginUser
    });
});

route.get('/login', (req, res) => {
    const loginUser = req.session.loginUser;
    res.render("login", {
        loginUser: loginUser
    });
});

// Food page for normal users
route.get("/foods/:page", async (req, res) => {
    const loginUser = req.session.loginUser;
    let currentPage = 1;
    let page = parseInt(req.params.page);
    if (page && !isNaN(page))
        currentPage = page;
    const total = 6;
    const start = (currentPage - 1) * total;
    const foods = await dish.find().skip(start).limit(total);
    const count = Math.ceil(await dish.find().countDocuments() / total);

    console.log(count + " :=> " + foods);
    res.render("showDishes", {
        loginUser: loginUser,
        foods: foods,
        count: count,
        currentPage: currentPage
    });
});

route.post("/saveRegistration", async (req, res) => {
    try {
        const existingUser = await User.findOne({ email: req.body.email });
        if (existingUser) {
            return res.render("registration", {
                registrationError: "Email already exists.",
                loginUser: req.session.loginUser
            });
        }
        const data = await User.create(req.body);
        res.render("login", {
            newRegister: true
        });
    } catch (error) {
        console.error("Registration Error:", error);
        res.render("registration", {
            registrationError: "An error occurred. Please try again.",
            loginUser: req.session.loginUser
        });
    }
});

route.post("/loginUser", async (req, res) => {
    try {
        const data = await User.findOne({ email: req.body.email, password: req.body.password });
        console.log(data);

        if (!data) {
            console.log("Invalid password or email");
            res.render("login", {
                invalid: true,
                email: req.body.email
            });
        } else {
            req.session.loginUser = data;
            console.log('Logged in user name: ' + req.session.loginUser.name);
            res.redirect("/dashboard");
        }
    } catch (error) {
        console.error("Login Error:", error);
        res.render("login", {
            loginError: "An error occurred during login. Please try again."
        });
    }
});

route.get("/dashboard", (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        if (loginUser.type === 'normal') {
            console.log("Normal user");
            res.render("normalPages/normalDashboard", {
                loginUser: loginUser
            });
        } else if (loginUser.type === 'admin') {
            console.log('Admin user');
            res.render("adminPages/adminDashboard", {
                loginUser: loginUser
            });
        } else if (loginUser.type === 'employee') {
            console.log('Employee user');
            res.render("employeePages/employeeDashboard", {
                loginUser: loginUser
            });
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Admin Routes
route.get("/admin/addDish", (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;

        if (loginUser.type === "admin") {
            res.render("adminPages/adminAddNewDish", {
                loginUser: loginUser
            });
        } else {
            res.status(403).send(`<h1>Access Denied!</h1><h2>You do not have permission to access this page.</h2>`);
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Show food table in admin panel
route.get("/admin/dishMenus/:page", async function (req, res) {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        let currentPage = 1;
        let page = parseInt(req.params.page);
        if (page && !isNaN(page))
            currentPage = page;
        const total = 6;
        const start = (currentPage - 1) * total;
        const data = await dish.find().skip(start).limit(total);
        const totalPage = Math.ceil(await dish.find().countDocuments() / total);
        if (loginUser.type === "admin") {
            res.render("adminPages/adminFoodTable", {
                loginUser: loginUser,
                foods: data,
                currentPage: currentPage,
                count: totalPage
            });
        } else {
            res.status(403).send(`<h1>Access Denied!</h1><h2>You do not have permission to access this page.</h2>`);
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Search food dish by user
route.post("/searchFood", async (req, res) => {
    try {
        const loginUser = req.session.loginUser;
        const search = req.body.foodSearch;
        const data = await dish.find({ "dname": new RegExp(search, 'i') });
        res.render("showDishes", {
            loginUser: loginUser,
            foods: data,
            searchKey: search
        });
    } catch (error) {
        console.error("Search Error:", error);
        res.render("showDishes", {
            loginUser: req.session.loginUser,
            searchError: "An error occurred during search. Please try again."
        });
    }
});

// Save the dish
route.post('/saveDish', async (req, res) => {
    try {
        // Validate uploaded file and form inputs
        if (
            !req.files ||
            req.body.ddiscount > 100 ||
            req.body.dname.trim() === '' ||
            req.body.dprice <= 0
        ) {
            return res.render("adminPages/adminAddNewDish", {
                notsave: true,
                loginUser: req.session.loginUser
            });
        }

        // Get uploaded image file
        const { photo } = req.files;
        const imageName = `${Date.now()}_${photo.name}`; // Generate unique filename

        // Construct image storage path
        const uploadPath = path.join(__dirname, '../../public/dishImages');
        console.log(uploadPath);
        const imagePath = path.join(uploadPath, imageName);

        // Ensure directory exists
        if (!fs.existsSync(uploadPath)) {
            fs.mkdirSync(uploadPath, { recursive: true });
        }

        // Move image to target path
        await photo.mv(imagePath);

        // Save image path to req.body
        req.body.photo = `${imageName}`;

        // Create dish in database
        const data = await dish.create(req.body);
        console.log(req.body);
        if (data) {
            console.log("Dish saved successfully");
            return res.render("adminPages/adminAddNewDish", {
                save: true,
                loginUser: req.session.loginUser
            });
        } else {
            console.error("Failed to save dish");
            return res.render("adminPages/adminAddNewDish", {
                notsave: true,
                loginUser: req.session.loginUser
            });
        }
    } catch (error) {
        console.error("Error while saving dish:", error);
        return res.render("adminPages/adminAddNewDish", {
            notsave: true,
            loginUser: req.session.loginUser
        });
    }
});

// Delete the dish
route.get('/admin/deleteDish/:id', async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        if (loginUser.type !== 'admin') {
            return res.status(403).send(`<h1>Access Denied!</h1><h2>You do not have permission to perform this action.</h2>`);
        }
        try {
            const dishToDelete = await dish.findById(req.params.id);
            if (dishToDelete && dishToDelete.photo) {
                const imagePath = path.join(__dirname, '../../public/dishImages', dishToDelete.photo);
                if (fs.existsSync(imagePath)) {
                    fs.unlinkSync(imagePath);
                    console.log('Deleted image:', imagePath);
                }
            }
            const data = await dish.deleteOne({ "_id": req.params.id });
            if (data.deletedCount > 0) {
                console.log("Dish is deleted...");
                const currentPage = 1;
                const total = 6;
                const start = (currentPage - 1) * total;
                const foods = await dish.find().skip(start).limit(total);
                const totalPage = Math.ceil(await dish.find().countDocuments() / total);
                res.render("adminPages/adminFoodTable", {
                    loginUser: loginUser,
                    foods: foods,
                    currentPage: 1,
                    count: totalPage,
                    delete: true
                });
            } else {
                res.status(500).send("<h1>Server Error!</h1><h2>Sorry, the dish was not deleted. Please try again.</h2>");
            }
        } catch (error) {
            console.error("Delete Dish Error:", error);
            res.status(500).send("<h1>Server Error!</h1><h2>Sorry, an error occurred while deleting the dish.</h2>");
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Place order for admin (possibly to view all orders)
route.get("/admin/adminOrder/:page", async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        if (loginUser.type === 'admin') {
            let currentPage = 1;
            const page = parseInt(req.params.page);
            if (page && !isNaN(page))
                currentPage = page;
            const total = 10;
            const start = (currentPage - 1) * total;
            const data = await order.find().sort({ pickupTime: 1 }).skip(start).limit(total); // Prioritize by pickup time
            const totalPage = Math.ceil(await order.find().countDocuments() / total);
            console.log("Place order: " + data);
            res.render('adminPages/adminOrders', {
                loginuser: loginUser,
                orders: data,
                currentPage: currentPage,
                count: totalPage
            });
        } else {
            res.status(403).send("<h2>Access Denied!</h2>");
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Change order states
route.get("/admin/cooking/:id", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'admin') {
        try {
            await order.updateOne({ _id: req.params.id }, { $set: { states: "Cooking" } });
            res.redirect("/admin/adminOrder/1");
        } catch (error) {
            console.error("Update Order to Cooking Error:", error);
            res.status(500).send("<h2>Failed to update order status.</h2>");
        }
    } else {
        res.status(403).send("<h2>Access Denied!</h2>");
    }
});

route.get("/admin/deliver/:id", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'admin') {
        try {
            await order.updateOne({ _id: req.params.id }, { $set: { states: "Out for delivery." } });
            res.redirect("/admin/adminOrder/1");
        } catch (error) {
            console.error("Update Order to Out for Delivery Error:", error);
            res.status(500).send("<h2>Failed to update order status.</h2>");
        }
    } else {
        res.status(403).send("<h2>Access Denied!</h2>");
    }
});

route.get("/admin/handover/:id", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'admin') {
        try {
            await order.updateOne({ _id: req.params.id }, { $set: { states: "Order completed." } });
            res.redirect("/admin/adminOrder/1");
        } catch (error) {
            console.error("Update Order to Completed Error:", error);
            res.status(500).send("<h2>Failed to update order status.</h2>");
        }
    } else {
        res.status(403).send("<h2>Access Denied!</h2>");
    }
});

// Edit dish
route.get("/admin/editDish/:id/:flag", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'admin') {
        try {
            const data = await dish.findById(req.params.id);
            const flag = req.params.flag;
            if (data) {
                res.render("adminPages/adminEditDish", {
                    food: data,
                    loginUser: req.session.loginUser
                });
            } else {
                res.status(404).send(`<h1>Dish Not Found!</h1>`);
            }
        } catch (error) {
            console.error("Edit Dish Error:", error);
            res.status(500).send(`<h1>Server Error!</h1>`);
        }
    } else {
        res.status(403).send(`<h1>Access Denied!</h1>`);
    }
});

route.post("/admin/saveEditDish/:id", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'admin') {
        try {
            if (req.files && req.files.photo) {
                console.log("Photo is selected. Old photo is " + req.body.tempImage);
                const oldImagePath = path.join(__dirname, '../../public/dishImages', req.body.tempImage);
                if (fs.existsSync(oldImagePath)) {
                    fs.unlinkSync(oldImagePath);
                    console.log('Old file is deleted');
                }
                const { photo } = req.files;
                const imageName = `${Date.now()}_${photo.name}`;
                req.body.photo = imageName;
                await photo.mv(path.join(__dirname, '../../public/dishImages/', imageName));
                console.log(req.body.photo);
            } else {
                delete req.body.photo; // Prevent overwriting if no new photo is uploaded
            }

            const updateData = { ...req.body };
            if (!updateData.photo) {
                delete updateData.photo;
            }

            const data = await dish.updateOne({ _id: req.params.id }, { $set: updateData });
            if (data.modifiedCount > 0) {
                console.log("Dish updated");
                res.redirect("/admin/editDish/" + req.params.id + "/success");
            } else {
                console.log('Dish not updated');
                res.redirect("/admin/editDish/" + req.params.id + "/error");
            }
        } catch (error) {
            console.error("Save Edit Dish Error:", error);
            res.redirect("/admin/editDish/" + req.params.id + "/error");
        }
    } else {
        res.status(403).send(`<h1>Access Denied!</h1>`);
    }
});

// Logout
route.get("/logout", (req, res) => {
    req.session.destroy();
    res.render("login", {
        logout: true
    });
});

// Check out
route.get("/user/orderFood", (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        res.render("normalPages/normalCheckout", {
            loginUser: loginUser
        });
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Place order from basket
route.post("/orderNowFromBasket", async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        const basket = JSON.parse(req.body.data);
        const pickupTime = req.body.pickupTime || "ASAP"; // Get pickup time
        const specialRequests = req.body.specialRequests || ""; // Get special requests
        const paymentType = req.body.paymentType;

        const dt_ob = new Date();
        const dateTime = `${("0" + dt_ob.getDate()).slice(-2)}/${("0" + (dt_ob.getMonth() + 1)).slice(-2)}/${dt_ob.getFullYear()} T ${("0" + dt_ob.getHours()).slice(-2)}:${("0" + dt_ob.getMinutes()).slice(-2)}:${("0" + dt_ob.getSeconds()).slice(-2)}`;

        try {
            for (const item of basket) {
                let object = {
                    dishId: item.id,
                    userId: loginUser._id,
                    user: loginUser,
                    photo: item.image,
                    dname: item.name,
                    time: dateTime,
                    pickupTime: pickupTime,
                    specialRequests: specialRequests,
                    price: item.price,
                    quantity: item.quantity,
                    paymentType: paymentType,
                    states: "NA" // Not active order
                };
                console.log(object);
                const data = await order.create(object);
                console.log(data);
                if (data) {
                    console.log('Order data saved');
                }
            }
            res.redirect("/");
        } catch (error) {
            console.error("Order Placement Error:", error);
            res.status(500).send("<h2>Failed to place order. Please try again.</h2>");
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// User Orders
route.get("/user/orders", async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        try {
            const data = await order.find({ $and: [{ "states": { $ne: "Order completed." } }, { "userId": loginUser._id }] }).sort({ pickupTime: 1 });
            console.log("Find data: " + data);
            res.render("normalPages/normalOrders", {
                loginUser: loginUser,
                orderFood: data
            });
        } catch (error) {
            console.error("Fetch Orders Error:", error);
            res.render("normalPages/normalOrders", {
                loginUser: loginUser,
                orderFood: [],
                fetchError: "Failed to fetch orders."
            });
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Cancel Order
route.get("/user/cancelOrder/:id", async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        try {
            const deleteData = await order.deleteOne({ _id: req.params.id });
            if (deleteData.deletedCount > 0) {
                const data = await order.find({ $and: [{ "states": { $ne: "Order completed." } }, { "userId": loginUser._id }] }).sort({ pickupTime: 1 });
                res.render("normalPages/normalOrders", {
                    loginUser: loginUser,
                    orderFood: data,
                    cancelOrder: true
                });
            } else {
                res.status(500).send("<h2>Failed to cancel order. Please try again.</h2>");
            }
        } catch (error) {
            console.error("Cancel Order Error:", error);
            res.status(500).send("<h2>An error occurred while canceling the order.</h2>");
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// User Order History
route.get("/user/history", async (req, res) => {
    if (req.session.loginUser) {
        const loginUser = req.session.loginUser;
        try {
            const data = await order.find({ "userId": loginUser._id }).sort({ pickupTime: -1 });
            res.render("normalPages/normalHistory", {
                loginUser: loginUser,
                history: data
            });
        } catch (error) {
            console.error("Fetch History Error:", error);
            res.render("normalPages/normalHistory", {
                loginUser: loginUser,
                history: [],
                fetchError: "Failed to fetch order history."
            });
        }
    } else {
        res.render("login", {
            loginFirst: true
        });
    }
});

// Employee Routes
// Employee Dashboard
route.get("/employee/dashboard", (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'employee') {
        const loginUser = req.session.loginUser;
        res.render("employeePages/employeeDashboard", {
            loginUser: loginUser
        });
    } else {
        res.status(403).send(`<h1>Access Denied!</h1>`);
    }
});

// Employee View Orders
route.get("/employee/orders/:page", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'employee') {
        const loginUser = req.session.loginUser;
        let currentPage = 1;
        let page = parseInt(req.params.page);
        if (page && !isNaN(page))
            currentPage = page;
        const total = 10;
        const start = (currentPage - 1) * total;
        try {
            const data = await order.find({ states: { $ne: "Order completed." } }).sort({ pickupTime: 1 }).skip(start).limit(total);
            const totalPage = Math.ceil(await order.find({ states: { $ne: "Order completed." } }).countDocuments() / total);
            res.render("employeePages/employeeOrders", {
                loginUser: loginUser,
                orders: data,
                currentPage: currentPage,
                count: totalPage
            });
        } catch (error) {
            console.error("Employee Fetch Orders Error:", error);
            res.status(500).send("<h2>Failed to fetch orders.</h2>");
        }
    } else {
        res.status(403).send(`<h1>Access Denied!</h1>`);
    }
});

// Employee Update Order Status
route.post("/employee/updateOrderStatus", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'employee') {
        const { orderId, status } = req.body;
        const validStatuses = ["in progress", "completed"];
        if (!validStatuses.includes(status.toLowerCase())) {
            return res.status(400).json({ message: "Invalid status." });
        }
        try {
            await order.updateOne({ _id: orderId }, { $set: { states: status } });
            res.json({ message: "Order status updated successfully." });
        } catch (error) {
            console.error("Employee Update Order Status Error:", error);
            res.status(500).json({ message: "Failed to update order status." });
        }
    } else {
        res.status(403).json({ message: "Access denied." });
    }
});

// Employee View Order History
route.get("/employee/history/:page", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'employee') {
        const loginUser = req.session.loginUser;
        let currentPage = 1;
        let page = parseInt(req.params.page);
        if (page && !isNaN(page))
            currentPage = page;
        const total = 10;
        const start = (currentPage - 1) * total;
        try {
            const data = await order.find({ userId: req.session.loginUser._id }).sort({ pickupTime: -1 }).skip(start).limit(total);
            const totalPage = Math.ceil(await order.find({ userId: req.session.loginUser._id }).countDocuments() / total);
            res.render("employeePages/employeeHistory", {
                loginUser: loginUser,
                history: data,
                currentPage: currentPage,
                count: totalPage
            });
        } catch (error) {
            console.error("Employee Fetch History Error:", error);
            res.status(500).send("<h2>Failed to fetch order history.</h2>");
        }
    } else {
        res.status(403).send(`<h1>Access Denied!</h1>`);
    }
});

// Employee Mark Out-of-Stock Dish
route.post("/employee/markOutOfStock", async (req, res) => {
    if (req.session.loginUser && req.session.loginUser.type === 'employee') {
        const { dishId } = req.body;
        try {
            await dish.updateOne({ _id: dishId }, { $set: { dserve: 0 } }); // Assuming dserve represents available quantity
            res.json({ message: "Dish marked as out-of-stock." });
        } catch (error) {
            console.error("Employee Mark Out-of-Stock Error:", error);
            res.status(500).json({ message: "Failed to mark dish as out-of-stock." });
        }
    } else {
        res.status(403).json({ message: "Access denied." });
    }
});

module.exports = route;

==================================================
文件路径: src\views\index.hbs
文件名: index.hbs
文件内容:
<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Foodies</title>
  
</head>

<body>
  {{>navbar loginUser=loginUser}}
  
  <section id="/">
    <div class="container-fluid px-0 top-banner">
      <div class="container">
        <div class="row">
          <div class="col-lg-5 col-md-6">
            <h1>Good Food Choise Are Good Health...</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores, provident. Ipsa ipsam nisi ut ducimus
              consectetur molestiae molesti</p>
            <div class="mt-4">
              <button class="main-btn">Order now <i class="fas fa-shopping-basket ps-3"></i></button>
              <button class="white-btn">Order now <i class="fas fa-angle-right ps-3"></i></button>

            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section id="counter">
    <section class="counter-section">
      <div class="container">
        <div class="row text-center">
          <div class="col-md-3 mb-lg-0 mb-md-0 mb-5">
            <h2>
              <span id="count1">4568</span>+
            </h2>
            <p>SAVINGS</p>
          </div>
          <div class="col-md-3 mb-lg-0 mb-md-0 mb-5">
            <h2>
              <span id="count2">675</span>+
            </h2>
            <p>PHOTOS</p>
          </div>
          <div class="col-md-3 mb-lg-0 mb-md-0 mb-5">
            <h2>
              <span id="count3">567</span>+
            </h2>
            <p>FOODS</p>
          </div>
          <div class="col-md-3 mb-lg-0 mb-md-0 mb-5">
            <h2>
              <span id="count4">5673</span>+
            </h2>
            <p>CUSTOMERS</p>
          </div>
        </div>
      </div>
    </section>
  </section>

  <section id="about" class="my-5">
    <div class="container">
      <div class="row">
        <div class="card col-md-7 ">
          <img src="/static/image/img/img-1.png" class="img-fluid py-2" alt="">
        </div>
        <div class="col-md-5 mt-md-5 mt-1">
          <h2>We Pride Outserves On Making Real Food The Best Ingredients.</h2>
          <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Tempora eligendi adipisci commodi ullam,</p>
          <button class="main-btn">Learn More</button>
        </div>
      </div>
    </div>
  </section>

  <section id="service" class="container">
    <div class="row">
      <div class="col-md-5 mt-md-5 pt-md-5">
        <h2>We Make Everything By Hand With The Best Possible Ingredients.</h2>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Rerum non enim, error laudantium voluptatem, facilis
          facere necessitatibus cupiditate ullam quod unde soluta molestiae optio consequuntur!</p>
        <div class="checks">
          <span><i class="fa fa-check"></i> Lorem ipsum dolor sit amet.</span><br>
          <span><i class="fa fa-check"></i> Lorem ipsum dolor amet.</span><br>
          <span><i class="fa fa-check"></i> Lorem ipsum dolor sit amet.</span>
        </div>
        <button class="main-btn">Learn More</button>
      </div>
      <div class="col-md-7">
        <img src="/static/image/img/img-2.png" class="img-fluid" alt="">
      </div>
    </div>
  </section>

  <section id="exploreFood">
    <section class="container my-5">
      <div class="text-center mx-md-5 px-md-5">
        <h2 class="pb-0 mb-0">Explore Our Foods</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores fugiat quidem facilis enim aliquam
          possimus ipsa, minus suscipit rerum molestiae recusandae. Tempore neque, provident id veniam consectetur
          soluta repudiandae rerum?</p>
      </div>
      <div class="row my-5 ">
        <div class="col-md-4">
          <div class="card ">
            <img src="/static/image/img/img-3.jpg" class="img-fluid mb-2" alt="">
            <h4>Rainbow Vegetable Sandwich</h4>
            <p class="text-color">Time : 15-20 Minutes | Server 1</p>
            <h2 class="primary-color mb-3"> <i class="fa fa-usd"></i>10.50 <del class="text-muted"><i
                  class="fa fa-usd"></i>11.70</del></h2>
            <div>
              <button class="main-btn">Order Now</button>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card ">
            <img src="/static/image/img/img-4.jpg" class="img-fluid mb-2" alt="">
            <h4>Vegeterian Burger</h4>
            <p class="text-color">Time : 30-35 Minutes | Server 1</p>
            <h2 class="primary-color mb-3"> <i class="fa fa-usd"></i>9.50 <del class="text-muted"><i
                  class="fa fa-usd"></i>10.50</del></h2>
            <div>
              <button class="main-btn">Order Now</button>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card ">
            <img src="/static/image/img/img-5.jpg" class="img-fluid mb-2" alt="">
            <h4>Raspberry Stuffed French Toast</h4>
            <p class="text-color">Time : 15-20 Minutes | Server 1</p>
            <h2 class="primary-color mb-3"> <i class="fa fa-usd"></i>7.30 <del class="text-muted"><i
                  class="fa fa-sd"></i>10.70</del></h2>
            <div>
              <button class="main-btn">Order Now</button>
            </div>
          </div>
        </div>
      </div>
    </section>
  </section>


  <section id="testinomial">
    <div class="container my-5 mx-md-5 px-md-5">

      <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="false">
        <div class="carousel-indicators">
          <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active"
            aria-current="true" aria-label="Slide 1"></button>
          <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1"
            aria-label="Slide 2"></button>

        </div>
        <div class="carousel-inner">
          <div class="carousel-item text-center active">
            <img style="width:150px;height:auto;border-radius:50%" src="/static/image/review/review-1.jpg" alt="...">
            <div class="my-4">
              <h4 class="">John K Leone</h4>
              <p class="text-light">Some representative placeholder content for the first slide Lorem ipsum dolor sit amet consectetur
                adipisicing elit. Nesciunt perferendis qui exercitationem deleniti sed obcaecati..</p>
            </div>
          </div>
          <div class="carousel-item text-center ">
            <img style="width:150px;height:auto; border-radius:50%" src="/static/image/review/review-2.jpg" alt="...">
            <div class="my-4">
              <h4 class="">Nancy Whiller</h4>
              <p class="text-light">Some representative placeholder content for the first slide Lorem ipsum dolor sit amet consectetur
                deleniti Lorem, ipsum dolor sit amet consectetur adipisicing elit. sed obcaecati..</p>
            </div>
          </div>


        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"
          data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"
          data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
      </div>

    </div>
  </section>

  <section id="subscription">
    <div class="container">
      <div class="text-center">
        <h2 class="mb-0">Hurry Up! Subscribe Our Newsletter And Get 25% Off</h2>
        <p class="text-color">Limmited time offer for this month. No creadit card required.</p>
        <div class="text-center my-5">
          <form action="">
            <div class="row">
              <div class="col-md-4 offset-md-3 ">
                          <input class="mt-1 form-control" type="text" placeholder="Enter Email Id...">
              </div>
               <div class="col-md-2 mt-2 ">
                       <button class="main-btn">Subscribe</button>
            </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </section>

  <section id="footer">

    <div class="text-center">
      <a href="">Resiter</a>
      <a href="">Forum</a>
      <a href="">Affilate</a>
      <a href="">FAQ</a><br>
      <small class="mt-5 text-light">@ 2022. Foodie. All rights reserved.</small>
    </div>
  </section>

 
</body>

</html>
==================================================
文件路径: src\views\login.hbs
文件名: login.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    {{>navbar}}
    <section class="container-fluid">
        <div class="register-banner ">
            <div class="container">
                <div class="row mb-5 pb-5">
                    <div class="col-md-6 mt-5 mb-5">
                        <div class="register-form">
                            <div class="text-center">
                                <h2 class="primary-color">Login Here...</h2>
                            </div>
                            <form class="form" action="/loginUser" method="post">
                                <div class="mx-2">
                                    <input type="text"  class="form-control mt-3" name="email" id="" placeholder="Enter the email">
                                    <input  type="password"  class="form-control mt-3" name="password" id="" placeholder="Enter the passowrd">
                                </div>

                                <div class="text-right">
                                    <button type="submit" class="main-btn mt-3 mx-4 mb-1">Login</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</body>

</html>
{{#if invalid}}
<script>
     Swal.fire({
        title: 'Something is wrong!',
        text: 'Invalid email or password. Try with another..',
        icon: 'error',
        confirmButtonText: 'Ok!'
    })
</script>
{{/if}}
{{#if logout}}
<script>
     Swal.fire({
        title: 'You are successfully logout!',
        icon: 'success',
        confirmButtonText: 'Ok!'
    })
</script>
{{/if}}
{{#if loginFirst}}
<script>
     Swal.fire({
        title: 'Please Login First!',
        text:'your not login to server please login then access the page.',
        icon: 'info',
        confirmButtonText: 'Ok!'
    })
</script>
{{/if}}
{{#if newRegister}}
<script>
     Swal.fire({
        title: 'Register success full!',
        text:'Please login first,using your password and email id.',
        icon: 'success',
        confirmButtonText: 'Ok!'
    })
</script>
{{/if}}
==================================================
文件路径: src\views\registration.hbs
文件名: registration.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}
    <section class="container-fluid">
        <div class="register-banner">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="register-form">
                            <div class="text-center">
                                <h2 class="primary-color">Register Here...</h2>
                            </div>
                            <form class="form" action="/saveRegistration" method="post">
                                <div class="mx-2">
                                    <input name="name" class="form-control mt-3" placeholder="Enter your name" type="text" required>
                                    <input name="email" type="email" placeholder="Enter your email" class="form-control mt-3" required>
                                    <input name="phone" placeholder="Enter your phone number" type="text" class="form-control mt-3" required>
                                    <input name="password" type="password" placeholder="Enter your password" class="form-control mt-3" required>
                                    <textarea name="address" class="form-control mt-3" placeholder="Enter your address" rows="3" required></textarea>

                                    <!-- Updated account type selection -->
                                    <select name="type" class="form-control mt-3" required>
                                        <option value="normal">Normal User</option>
                                        <option value="admin">Admin</option>
                                        <option value="employee">Employee</option> <!-- Added 'Employee' option -->
                                    </select>
                                </div>

                                <div class="text-right">
                                    <button type="submit" class="main-btn mt-2 mx-4 mb-1">Register</button>
                                </div>
                            </form>
                        </div>
                        {{#if registrationError}}
                        <script>
                            Swal.fire({
                                title: 'Registration Error!',
                                text: '{{registrationError}}',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        </script>
                        {{/if}}
                    </div>
                </div>
            </div>
        </div>
    </section>
</body>

</html>
{{#if newRegister}}
<script>
    Swal.fire({
        title: 'Registration Successful!',
        text: 'Please login using your email and password.',
        icon: 'success',
        confirmButtonText: 'OK'
    });
</script>
{{/if}}

==================================================
文件路径: src\views\showDishes.hbs
文件名: showDishes.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Foodies Foods</title>

</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section class="container-fluid">

        <div class="container">
            <form action="/searchFood" method="post">
                <div class="row search-panel">
                    <div class="col-md-5 offset-md-3 mt-1">
                        <input value="{{searchKey}}" placeholder="Serach food here,vegeterian burgur"
                            class="form-control" type="text" name="foodSearch" id="">
                    </div>
                    <div class="col-md-1 text-center mt-1">
                        <button type="submit" class="white-btn2">Search</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="container">
            <div class="row my-2">
                {{#each foods}}
                <div class="col-md-4 my-5">
                    <div class="card ">
                        <img style="height:210px" src="../public/dishImage/{{this.photo}}" class="img-fluid mb-2" alt="">
                        <h4>{{this.dname}}</h4>
                        <p class="text-color">Time : {{this.dtime}} Minutes | Serve {{this.dserve}}</p>
                        <h2 class="primary-color mb-3"> <i class="fa fa-usd"></i>{{#discount this.dprice
                            this.ddiscount}}{{/discount}} <del class="text-muted"><i
                                    class="fa fa-usd"></i>{{this.dprice}}</del></h2>
                        <div>
                            <button onclick="addFoodToBasket('{{this._id}}','{{this.dname}}','{{this.dprice}}','{{this.photo}}' )" class="main-btn">Add To Basket</button>
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>



            <nav aria-label="Page navigation example " class="mt-3 mb-5">
                <ul class="pagination justify-content-end">
                    <li class="page-item">
                        <a class="page-link {{#ifprev currentPage}}{{/ifprev}}" href="/foods/{{#prevPage currentPage}}{{/prevPage}}" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    {{#times count}}
                    <li class="page-item"><a class="page-link" href="/foods/{{this}}">{{this}}</a></li>
                    {{/times}}
                    <li class="page-item">
                        <a class="page-link {{#ifnext currentPage count}}{{/ifnext}}" href="/foods/{{#nextPage currentPage}}{{/nextPage}}" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>


        </div>


    </section>


</body>

</html>
==================================================
文件路径: src\views\adminPages\adminAddNewDish.hbs
文件名: adminAddNewDish.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add new dish</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="">
                <div class="row">
                    <div class="col-md-3">
                        <!-- sidebar -->
                        {{>sidebar}}
                    </div>
                    <div class="col-md-9 ">
                        <div class="adminPanel card">
                            <div class="text-center my-1">
                                <h4><span class="primary-color">FOODIES</span> New Dish.</h4>
                            </div>
                            <div class="mb-4 mt-2 mx-2">
                                <div class="row">
                                    <div class="col-md-8 offset-md-2 shadow">

                                        <form action="/saveDish" method="post" enctype="multipart/form-data">
                                            <input name="dname" type="text" class="my-2 form-control"
                                                placeholder="Enter dish name">
                                            <input name="dtype" type="text" class="my-2 form-control"
                                                placeholder="Enter dish type">

                                            <div class="row">
                                                <div class="col-md-6">
                                                    <input name="dprice" type="text" class="my-2 form-control"
                                                        placeholder="Enter dish price">
                                                </div>
                                                <div class="col-md-6">
                                                     <input name="dserve" type="text" class="my-2 form-control"
                                                placeholder="Enter dish serve contity..">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                   <input name="dtime" type="text" class="my-2 form-control"
                                                placeholder="Enter required time">
                                                </div>
                                                <div class="col-md-6">
                                                     <input name="ddiscount" type="text" class="my-2 form-control"
                                                placeholder="Enter discount ..." min="0" max="100">
                                                </div>
                                            </div>

                                            
                                            <label class="my-2" for="photo">Food Pic : </label>
                                            <input type="file" name="photo" id="photo">
                                            <textarea class="my-2 form-control" name="discription" id="" cols="30"
                                                rows="4"></textarea>
                                            <div class="text-right">
                                                <button class="main-btn my-2 mx-2">Add Food</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


</body>

</html>
{{#if save}}
<script>
    Swal.fire({
        title: 'New Dish Added!',
        text: 'Dish is added to outr menu card...',
        icon: 'success',
        confirmButtonText: 'OK'
    })
</script>
{{/if}}

{{#if notsave}}
<script>
    Swal.fire({
        title: 'Something is wrong!',
        text: 'Please fill the important information. dish is not save to our menu card...',
        icon: 'error',
        confirmButtonText: 'Cancel'
    })
</script>
{{/if}}
==================================================
文件路径: src\views\adminPages\adminDashboard.hbs
文件名: adminDashboard.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
  {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="">
                <div class="row">
                    <div class="col-md-3">
                       <!-- sidebar -->
                       {{>sidebar}}
                    </div>
                    <div class="col-md-9">
                        <div class="adminPanel card">
                            <div class="text-center my-1">
                                <h4><span class="primary-color">FOODIES</span> Dashboard</h4>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card mt-1">
                                        <div class="text-center">
                                            <img style="width:130px;height:130px;border-radius:50%" src="/static/image/img/d2.jpg" alt="">
                                            <h3 class="my-2 primary-color">Food Delivered</h3>
                                            <h2 class="primary-color mb-0 pb-2">4352+</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card mt-1">
                                        <div class="text-center">
                                            <img style="width:130px;height:130px;border-radius:50%" src="/static/image/img/chef.jpg" alt="">
                                            <h3 class="my-2 primary-color">Our Master Chef</h3>
                                            <h2 class="primary-color mb-0 pb-2">52+</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card mt-1">
                                        <div class="text-center">
                                            <img style="width:130px;height:130px;border-radius:50%" src="/static/image/img/pizza.jpg" alt="">
                                            <h3 class="my-2 primary-color">Available Foods</h3>
                                            <h2 class="primary-color mb-0 pb-2">432+</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card mt-1">
                                        <div class="text-center">
                                            <img style="width:130px;height:130px;border-radius:50%" src="/static/image/img/d1.jpg" alt="">
                                            <h3 class="my-2 primary-color">Fast Delivery</h3>
                                            <h2 class="primary-color mb-0 pb-2">42+</h2>
                                        </div>
                                    </div>
                                </div>
                                

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


</body>
</html>
==================================================
文件路径: src\views\adminPages\adminEditDish.hbs
文件名: adminEditDish.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Dish</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="">
                <div class="row">
                    <div class="col-md-3">
                        <!-- sidebar -->
                        {{>sidebar}}
                    </div>
                    <div class="col-md-9 ">
                        <div class="adminPanel card">
                            <div class="text-center my-1">
                                <h4><span class="primary-color">FOODIES</span> Edit Dish.</h4>
                            </div>
                            <div class="mb-4 mt-2 mx-2">
                                <form action="/admin/saveEditDish/{{food._id}}" method="post"
                                    enctype="multipart/form-data">

                                    <div class="row shadow mx-5">

                                        <div class="col-md-4">
                                            <img src="/static/dishImage/{{food.photo}}" class="img-fluid py-3" alt="">
                                            <label class="my-2" for="photo">Food Pic : </label>
                                            <input type="hidden" value="{{food.photo}}" name="tempImage">
                                            <input type="file" value="{{food.photo}}" name="photo" id="photo">
                                        </div>
                                        <div class="col-md-8 ">

                                            <input value="{{food.dname}}" name="dname" type="text"
                                                class="my-2 form-control" placeholder="Enter dish name">
                                            <input value="{{food.dtype}}" name="dtype" type="text"
                                                class="my-2 form-control" placeholder="Enter dish type">

                                            <div class="row">
                                                <div class="col-md-6">
                                                    <input value="{{food.dprice}}" name="dprice" type="text"
                                                        class="my-2 form-control" placeholder="Enter dish price">
                                                </div>
                                                <div class="col-md-6">
                                                    <input value="{{food.dserve}}" name="dserve" type="text"
                                                        class="my-2 form-control"
                                                        placeholder="Enter dish serve contity..">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <input value="{{food.dtime}}" name="dtime" type="text"
                                                        class="my-2 form-control" placeholder="Enter required time">
                                                </div>
                                                <div class="col-md-6">
                                                    <input value="{{food.ddiscount}}" name="ddiscount" type="text"
                                                        class="my-2 form-control" placeholder="Enter discount ..."
                                                        min="0" max="100">
                                                </div>
                                            </div>



                                            <textarea class="my-2 form-control" name="discription" id="" cols="30"
                                                rows="4">{{food.discription}}</textarea>
                                            <div class="text-right">
                                                <button class="main-btn my-2 mx-2">Edit Food</button>
                                            </div>

                                        </div>
                                    </div>
                                </form>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </section>


</body>

</html>
<script>
    let urlSplit = window.location.href.split('/');
    const action = urlSplit[urlSplit.length - 1]
    if (action == 'success') {
        Swal.fire({
            title: 'Dish is updated !!',
            text: 'Your Dish is successfully updated..',
            icon: 'success',
            confirmButtonText: 'OK'
        })
    } else if (action == 'error') {
        Swal.fire({
            title: 'Something is wrong!',
            text: 'Please fill the important information. dish is not updated',
            icon: 'error',
            confirmButtonText: 'Cancel'
        })
    }

</script>

==================================================
文件路径: src\views\adminPages\adminFoodTable.hbs
文件名: adminFoodTable.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="">
                <div class="row">
                    <div class="col-md-3 ">
                        <!-- sidebar -->
                        {{>sidebar}}
                    </div>
                    <div class="col-md-9">
                        <div class="adminPanel card">
                            <div class="text-center mt-1 mb-2">
                                <h4><span class="primary-color">FOODIES</span> Menu Card.</h4>
                            </div>
                            <table class="table table-striped">
                                <thead class="">
                                    <tr >
                                        <th scope="col">Photo</th>
                                        <th scope="col">Dish Name</th>
                                        <th scope="col">Price</th>
                                        <th scope="col">Discount</th>
                                        <th scope="col">C. time</th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    {{#each foods}}
                                    <tr class="">

                                        <td scope="row"><img style="width:65px;height:65px;border-radius:50%"
                                                src="../../public/dishImages/{{this.photo}}" alt=":("></td>
                                        <td>{{this.dname}}</td>
                                        <td>{{this.dprice}}</td>
                                        <td>{{this.ddiscount}}</td>
                                        <td>{{this.dtime}}</td>
                                        <td>
                                            <button onclick="editDish('{{this._id}}')" class="btn btn-sm btn-warning">Edit</button>
                                            <button onclick="deleteDish('{{this._id}}')"
                                                class="btn btn-sm btn-danger">Remove</button>
                                        </td>

                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>


                        </div>


                        <nav aria-label="Page navigation example " class="mt-3 mb-5">
                            <ul class="pagination justify-content-end">
                                <li class="page-item">
                                    <a class="page-link {{#ifprev currentPage}}{{/ifprev}}"
                                        href="/admin/dishMenus/{{#prevPage currentPage}}{{/prevPage}}"
                                        aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                {{#times count}}
                                <li class="page-item {{#active this currentPage}}{{/active}}"><a class="page-link"
                                        href="/admin/dishMenus/{{this}}">{{this}}</a></li>
                                {{/times}}
                                <li class="page-item">
                                    <a class="page-link {{#ifnext currentPage count}}{{/ifnext}}"
                                        href="/admin/dishMenus/{{#nextPage currentPage}}{{/nextPage}}"
                                        aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>


</body>

</html>

<script>
    function editDish(id){
        location.assign("/admin/editDish/"+id+"/false")
    }
    function deleteDish(id) {
        Swal.fire({
            title: 'Are you sure delete the dish ?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Yes',
            denyButtonText: 'No',
            customClass: {
                actions: 'my-actions',
                cancelButton: 'order-1 right-gap',
                confirmButton: 'order-2',
                denyButton: 'order-3',
            }
        }).then((result) => {
            if (result.isConfirmed) {
                location.assign("/admin/deleteDish/" + id)
            } else if (result.isDenied) {
                Swal.fire('Delete process cancel..', '', 'info')
            }
        })
    }

</script>

{{#if delete}}
<script>
    Swal.fire({
        title: 'Dish deleted!',
        text: 'Dish is rermoved from menu card.',
        icon: 'success',
        confirmButtonText: 'Ok'
    })
</script>
{{/if}}
==================================================
文件路径: src\views\adminPages\adminOrders.hbs
文件名: adminOrders.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Orders</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="adminPanel card">
                        <div class="text-center my-1">
                            <h4><span class="primary-color">FOODIES</span> User Orders.</h4>
                        </div>

                        <table class="table table-hover table-striped px-md-2">
                            <thead>
                                <tr>
                                    <th>Dish Name</th>
                                    <th>User Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Address</th>
                                    <th>Pickup Time</th>
                                    <th>Special Requests</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each orders}}
                                <tr>
                                    <td>{{this.dname}}</td>
                                    <td>{{this.user.name}}</td>
                                    <td>{{this.price}}</td>
                                    <td>{{this.quantity}}</td>
                                    <td>{{this.user.address}}</td>
                                    <td>{{this.pickupTime}}</td>
                                    <td>{{this.specialRequests}}</td>
                                    <td>
                                        {{#ifStates this.states this._id}}{{/ifStates}}
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>

                        <nav aria-label="Page navigation example" class="mt-3 mb-5">
                            <ul class="pagination justify-content-end">
                                <li class="page-item">
                                    <a class="page-link {{#ifprev currentPage}}"disabled"{{/ifprev}}" href="/admin/adminOrder/{{#prevPage currentPage}}{{/prevPage}}" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                {{#times count}}
                                <li class="page-item {{#active this currentPage}}{{/active}}"><a class="page-link" href="/admin/adminOrder/{{this}}">{{this}}</a></li>
                                {{/times}}
                                <li class="page-item">
                                    <a class="page-link {{#ifnext currentPage count}}"disabled"{{/ifnext}}" href="/admin/adminOrder/{{#nextPage currentPage}}{{/nextPage}}" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>

                    {{#if delete}}
                    <script>
                        Swal.fire({
                            title: 'Dish Deleted!',
                            text: 'The dish has been removed from the menu.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    </script>
                    {{/if}}
                </div>
            </div>
        </div>
    </section>
</body>

</html>

==================================================
文件路径: src\views\employeePages\employeeDashboard.hbs
文件名: employeeDashboard.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Dashboard</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="employeePanel card">
                        <div class="text-center my-3">
                            <h3><span class="primary-color">FOODIES</span> Employee Dashboard</h3>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Manage Orders</h5>
                                        <p class="card-text">View and update current orders.</p>
                                        <a href="/employee/orders/1" class="btn btn-primary">Go to Orders</a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Order History</h5>
                                        <p class="card-text">View past orders.</p>
                                        <a href="/employee/history/1" class="btn btn-primary">View History</a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Manage Inventory</h5>
                                        <p class="card-text">Mark dishes as out-of-stock.</p>
                                        <a href="/employee/markOutOfStock" class="btn btn-primary">Manage Inventory</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Additional dashboard widgets can be added here -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</body>

</html>

==================================================
文件路径: src\views\employeePages\employeeHistory.hbs
文件名: employeeHistory.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="employeePanel card">
                        <div class="text-center my-3">
                            <h3><span class="primary-color">FOODIES</span> Order History</h3>
                        </div>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Dish Name</th>
                                    <th>Customer Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Pickup Time</th>
                                    <th>Special Requests</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each history}}
                                <tr>
                                    <td>{{this.dname}}</td>
                                    <td>{{this.user.name}}</td>
                                    <td>{{this.price}}</td>
                                    <td>{{this.quantity}}</td>
                                    <td>{{this.pickupTime}}</td>
                                    <td>{{this.specialRequests}}</td>
                                    <td>{{this.states}}</td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>

                        <nav aria-label="Page navigation example" class="mt-3 mb-5">
                            <ul class="pagination justify-content-end">
                                <li class="page-item">
                                    <a class="page-link {{#ifprev currentPage}}"disabled"{{/ifprev}}" href="/employee/history/{{#prevPage currentPage}}{{/prevPage}}" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                {{#times count}}
                                <li class="page-item {{#active this currentPage}}{{/active}}"><a class="page-link" href="/employee/history/{{this}}">{{this}}</a></li>
                                {{/times}}
                                <li class="page-item">
                                    <a class="page-link {{#ifnext currentPage count}}"disabled"{{/ifnext}}" href="/employee/history/{{#nextPage currentPage}}{{/nextPage}}" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>
</body>

</html>

==================================================
文件路径: src\views\employeePages\employeeManageInventory.hbs
文件名: employeeManageInventory.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Inventory</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="employeePanel card">
                        <div class="text-center my-3">
                            <h3><span class="primary-color">FOODIES</span> Manage Inventory</h3>
                        </div>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Dish Name</th>
                                    <th>Available Quantity</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each dishes}}
                                <tr>
                                    <td>{{this.dname}}</td>
                                    <td>{{this.dserve}}</td>
                                    <td>
                                        {{#if (eq this.dserve 0)}}
                                            <button class="btn btn-sm btn-secondary" disabled>Out of Stock</button>
                                        {{else}}
                                            <button class="btn btn-sm btn-danger" onclick="markOutOfStock('{{this._id}}')">Mark Out of Stock</button>
                                        {{/if}}
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>

                        <nav aria-label="Page navigation example" class="mt-3 mb-5">
                            <ul class="pagination justify-content-end">
                                <li class="page-item">
                                    <a class="page-link {{#ifprev currentPage}}"disabled"{{/ifprev}}" href="/employee/markOutOfStock/{{#prevPage currentPage}}{{/prevPage}}" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                {{#times count}}
                                <li class="page-item {{#active this currentPage}}{{/active}}"><a class="page-link" href="/employee/markOutOfStock/{{this}}">{{this}}</a></li>
                                {{/times}}
                                <li class="page-item">
                                    <a class="page-link {{#ifnext currentPage count}}"disabled"{{/ifnext}}" href="/employee/markOutOfStock/{{#nextPage currentPage}}{{/nextPage}}" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        function markOutOfStock(dishId) {
            Swal.fire({
                title: 'Mark as Out of Stock?',
                text: "Are you sure you want to mark this dish as out of stock?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, mark it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '/employee/markOutOfStock',
                        data: { dishId: dishId },
                        success: function (response) {
                            Swal.fire('Marked!', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr) {
                            Swal.fire('Error!', xhr.responseJSON.message, 'error');
                        }
                    });
                }
            });
        }
    </script>
</body>

</html>

==================================================
文件路径: src\views\employeePages\employeeOrderNotifications.hbs
文件名: employeeOrderNotifications.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Notifications</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="employeePanel card">
                        <div class="text-center my-3">
                            <h3><span class="primary-color">FOODIES</span> Order Notifications</h3>
                        </div>
                        <div class="notification-section">
                            {{#each orders}}
                            <div class="card mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">{{this.dname}} - {{this.user.name}}</h5>
                                    <p class="card-text">
                                        <strong>Price:</strong> {{this.price}}<br>
                                        <strong>Quantity:</strong> {{this.quantity}}<br>
                                        <strong>Pickup Time:</strong> {{this.pickupTime}}<br>
                                        <strong>Special Requests:</strong> {{this.specialRequests}}<br>
                                        <strong>Status:</strong> {{this.states}}
                                    </p>
                                    <button class="btn btn-sm btn-success" onclick="markInProgress('{{this._id}}')">Mark In Progress</button>
                                    <button class="btn btn-sm btn-danger" onclick="markCompleted('{{this._id}}')">Mark Completed</button>
                                </div>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        function markInProgress(orderId) {
            Swal.fire({
                title: 'Mark as In Progress?',
                text: "Are you sure you want to mark this order as 'In Progress'?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, mark it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Implement the logic to mark order as in progress
                    $.ajax({
                        type: 'POST',
                        url: '/employee/updateOrderStatus',
                        data: { orderId: orderId, status: 'in progress' },
                        success: function (response) {
                            Swal.fire('Updated!', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr) {
                            Swal.fire('Error!', xhr.responseJSON.message, 'error');
                        }
                    });
                }
            });
        }

        function markCompleted(orderId) {
            Swal.fire({
                title: 'Mark as Completed?',
                text: "Are you sure you want to mark this order as 'Completed'?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, complete it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Implement the logic to mark order as completed
                    $.ajax({
                        type: 'POST',
                        url: '/employee/updateOrderStatus',
                        data: { orderId: orderId, status: 'completed' },
                        success: function (response) {
                            Swal.fire('Completed!', response.message, 'success').then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr) {
                            Swal.fire('Error!', xhr.responseJSON.message, 'error');
                        }
                    });
                }
            });
        }
    </script>
</body>

</html>

==================================================
文件路径: src\views\employeePages\employeeOrders.hbs
文件名: employeeOrders.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Orders</title>
</head>

<body>
    {{>navbar loginUser=loginUser}}

    <section>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <!-- Sidebar -->
                    {{>sidebar}}
                </div>
                <div class="col-md-9">
                    <div class="employeePanel card">
                        <div class="text-center my-3">
                            <h3><span class="primary-color">FOODIES</span> Manage Orders</h3>
                        </div>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Dish Name</th>
                                    <th>Customer Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Pickup Time</th>
                                    <th>Special Requests</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each orders}}
                                <tr>
                                    <td>{{this.dname}}</td>
                                    <td>{{this.user.name}}</td>
                                    <td>{{this.price}}</td>
                                    <td>{{this.quantity}}</td>
                                    <td>{{this.pickupTime}}</td>
                                    <td>{{this.specialRequests}}</td>
                                    <td>{{this.states}}</td>
                                    <td>
                                        {{#if (eq this.states "NA")}}
                                            <button class="btn btn-sm btn-success" onclick="updateStatus('{{this._id}}', 'in progress')">Mark In Progress</button>
                                        {{else if (eq this.states "in progress")}}
                                            <button class="btn btn-sm btn-warning" onclick="updateStatus('{{this._id}}', 'completed')">Mark Completed</button>
                                        {{else}}
                                            <span class="badge bg-secondary">Completed</span>
                                        {{/if}}
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>

                        <nav aria-label="Page navigation example" class="mt-3 mb-5">
                            <ul class="pagination justify-content-end">
                                <li class="page-item">
                                    <a class="page-link {{#ifprev currentPage}}"disabled"{{/ifprev}}" href="/employee/orders/{{#prevPage currentPage}}{{/prevPage}}" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                {{#times count}}
                                <li class="page-item {{#active this currentPage}}{{/active}}"><a class="page-link" href="/employee/orders/{{this}}">{{this}}</a></li>
                                {{/times}}
                                <li class="page-item">
                                    <a class="page-link {{#ifnext currentPage count}}"disabled"{{/ifnext}}" href="/employee/orders/{{#nextPage currentPage}}{{/nextPage}}" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        function updateStatus(orderId, status) {
            Swal.fire({
                title: 'Update Order Status',
                text: `Are you sure you want to mark this order as "${status}"?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '/employee/updateOrderStatus',
                        data: {
                            orderId: orderId,
                            status: status
                        },
                        success: function (response) {
                            Swal.fire({
                                title: 'Success',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: 'Error',
                                text: xhr.responseJSON.message || 'An error occurred.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        }
    </script>
</body>

</html>

==================================================
文件路径: src\views\normalPages\normalCheckout.hbs
文件名: normalCheckout.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>

<body>
    {{> navbar loginUser=loginUser}}
    <section>
        <div class="container-fluid pb-5">
            {{> userBar}}

            <div class="container userSection">
                <div class="row">

                    <div class="col-md-3">
                        <h4>Payment Type</h4>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentType" id="offline" value="cash on delivery">
                            <label class="form-check-label" for="offline">
                                Cash on Delivery
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentType" id="online" value="online">
                            <label class="form-check-label" for="online">
                                Online Payment
                            </label>
                        </div>

                        <h4 class="mt-4">Pickup Time</h4>
                        <input type="datetime-local" id="pickupTime" class="form-control" name="pickupTime" required>

                        <h4 class="mt-4">Special Requests</h4>
                        <textarea id="specialRequests" class="form-control" name="specialRequests" rows="3" placeholder="Enter any special requests..."></textarea>
                    </div>

                    <div class="col-md-9">
                        <div class="card mb-3 px-3">
                            <h4>Name: {{loginUser.name}}</h4>
                            <h4>Phone Number: {{loginUser.phone}}</h4>
                            <h4>Delivery Address: {{loginUser.address}}</h4>
                        </div>
                        <div class="card">
                            <div class="card-body cart-body"></div>
                            <div id="orderPlaced"></div>

                            <div class="text-right">
                                <button onclick="placeOrder()" class="main-btn order-btn">Order Now !!</button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </section>
</body>

</html>

<script>
    function placeOrder() {
        const cartData = localStorage.getItem('cart');
        const paymentType = $('input[name="paymentType"]:checked').val();
        const pickupTime = $('#pickupTime').val();
        const specialRequests = $('#specialRequests').val();

        if (!paymentType) {
            Swal.fire({
                title: 'Select Payment Type',
                text: 'Please select a payment type.',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            return;
        }

        if (!pickupTime) {
            Swal.fire({
                title: 'Select Pickup Time',
                text: 'Please select a pickup time.',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            return;
        }

        if (cartData) {
            $.ajax({
                type: 'POST',
                url: '/orderNowFromBasket',
                data: {
                    data: cartData,
                    paymentType: paymentType,
                    pickupTime: pickupTime,
                    specialRequests: specialRequests
                },
                success: function (data) {
                    localStorage.removeItem('cart');
                    Swal.fire({
                        title: 'Order Placed!',
                        text: 'Your order has been successfully placed.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = "/";
                    });
                },
                error: function (xhr) {
                    Swal.fire({
                        title: 'Order Failed!',
                        text: xhr.responseJSON.message || 'Something went wrong. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        } else {
            Swal.fire({
                title: 'Cart is Empty!',
                text: 'Please add items to your cart before placing an order.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }
    }
</script>

==================================================
文件路径: src\views\normalPages\normalDashboard.hbs
文件名: normalDashboard.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    {{> navbar loginUser=loginUser}}
    <section>
        <div class="container-fluid pb-5">
            {{> userBar}}
            <div class="container userSection">
                <div class="row">
                    <div class="col-md-3 offset-md-3">
                        <div class="text-center">
                            <img class="img-fluid" src="/static/image/review/review-1.jpg"
                                alt="">
                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="card py-md-5 px-md-5 px-1">

                            <div class="row ">
                                <div class="col-md-4">
                                    <h4 class="text-muted">Name : </h4>
                                </div>
                                <div class="col-md-8">
                                    <h4 class="text-muted">{{loginUser.name}} </h4>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <h4 class="text-muted">Email : </h4>
                                </div>
                                <div class="col-md-8">
                                    <h4 class="text-muted">{{loginUser.email}} </h4>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <h4 class="text-muted">Password : </h4>
                                </div>
                                <div class="col-md-8">
                                    <h4 class="text-muted">{{loginUser.password}} </h4>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <h4 class="text-muted">Number : </h4>
                                </div>
                                <div class="col-md-8">
                                    <h4 class="text-muted">{{loginUser.phone}} </h4>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <h4 class="text-muted">Adreass : </h4>
                                </div>
                                <div class="col-md-8">
                                    <h4 class="text-muted">{{loginUser.adreass}} </h4>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </section>
</body>

</html>
==================================================
文件路径: src\views\normalPages\normalHistory.hbs
文件名: normalHistory.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    {{> navbar loginUser=loginUser}}
    <section>
        <div class="container-fluid pb-5">
            {{> userBar}}
            <div class="container">

                <div class="card p-md-4">
                    <div class="text-center mb-3">
                        <h4><span class="primary-color">FOODIES</span> history.</h4>
                    </div>
                    <table class="table table-hover">
                        <thead>
                            <td>Pic</td>
                            <td>Dish Name</td>
                            <td>Time</td>
                            <td>Price</td>
                            <td>Quantity</td>
                            <td>Payment Type</td>
                            <td>States</td>
                        </thead>
                        <tbody>
                            {{#each history}}
                            <tr>
                                <td>
                                    <img style="width:50px;height:50px;border-radius:50%"
                                        src="/static/dishImage/{{this.photo}}" alt="">
                                </td>
                                <td>{{this.dname}}</td>
                                <td>{{this.time}}</td>
                                <td>{{this.price}}</td>
                                <td>{{this.quantity}}</td>
                                <td>{{this.paymentType}}</td>
                                <td>{{this.states}}</td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>

            </div>


        </div>
    </section>
</body>

</html>
==================================================
文件路径: src\views\normalPages\normalOrders.hbs
文件名: normalOrders.hbs
文件内容:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    {{> navbar loginUser=loginUser}}
    <section>
        <div class="container-fluid pb-5">
            {{> userBar}}

            <div class="container userSection">
                <div class="text-center mb-1">
                    <h4><span class="primary-color">FOODIES</span> Current Order.</h4>
                </div>
                <div class="row">
                    {{#each orderFood}}
                    <div class="card">
                        <div class="row">
                            <div class="col-md-4 offset-md-2">
                                <img style="height:200px" src="/static/dishImage/{{this.photo}}" class="img-fluid p-3"
                                    alt="">
                            </div>
                            <div class="col-md-6 py-3">
                                <h5 class="primary-color">Order_id : {{this._id}}</h5>
                                <h4>Dish name : {{this.dname}}</h4>
                                <h4>Price : <i class="fa fa-usd"></i>{{this.price}}</h4>
                                <h4>Quantity : {{this.quantity}}</h4>
                                <h4>States :{{this.states}} </h4>
                                <div class="text-right">
                                    {{#ifCancelOrder this.states this._id}}{{/ifCancelOrder}}
                                    
                                </div>
                            </div>
                        </div>

                    </div>
                    {{/each}}
                    {{#if orderFood}}
                    {{else}}
                    <div class="text-center my-5">
                        <h2 class="primary-color">Current order not present...</h2>
                    </div>
                    {{/if}}


                </div>

            </div>
        </div>
    </section>
</body>

</html>

{{#if cancelOrder}}
<script>
    Swal.fire({
        title: 'Order cancel',
        text: 'Order is canceled successfully,...',
        icon: 'success',
        confirmButtonText: 'Ok!'
    })
</script>

{{/if}}
==================================================
文件路径: src\views\partials\navbar.hbs
文件名: navbar.hbs
文件内容:
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<link rel="stylesheet" href="/static/css/style.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
  integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js"
  integrity="sha512-aVKKRRi/Q/YV+4mjoKBsE4x3H+BkegoM/em46NNlCqNTmUYADjBbeNefNxYV7giUp0VxICtqdrbqU7iVaeZNXA=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/static/js/script.js"></script>

<nav class="navbar navbar-expand-lg bg-light fixed-top">
  <div class="container">
    <a class="navbar-brand" href="#"><img src="/static/image/logo.png" style="height:auto;width:130px" alt=""></a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#counter">About us</a>
        </li>

        <li class="nav-item">
          <a class="nav-link " href="/foods/1">Explore foods</a>
        </li>
        <li class="nav-item">
          <a class="nav-link " data-bs-toggle="modal" data-bs-target="#staticBackdrop"><i
              class="fas fa-shopping-basket ps-3"></i><small class="cart-num"></small></a>
        </li>

        {{#if loginUser}}
        <li class="nav-item">
          <a class="nav-link " href="/dashboard">{{loginUser.name}}</a>
        </li>
        {{else}}
        <li class="nav-item">
          <a class="nav-link " href="/register">Register</a>
        </li>
        <li class="nav-item">
          <a class="nav-link " href="/login">Login</a>
        </li>
        {{/if}}

        <li class="nav-item">
          <button class="main-btn">123 456 7890</button>
        </li>
      </ul>
    </div>
  </div>
</nav>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel"><img style="width:70px;height:40px" src="/static/image/logo.png" alt=""> Your Food Basket.</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body cart-body">
        <!-- Cart items will be dynamically loaded here -->
      </div>
      <div class="modal-footer">
        {{#if loginUser}}
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <a href="/user/orderFood" type="button" class="btn btn-primary checkout-btn">Check out food</a>
        {{else}}
        <small class="primary-color">Please login to check out food.</small>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<script>
    // Example JavaScript to handle cart display can be added here
</script>

==================================================
文件路径: src\views\partials\sidebar.hbs
文件名: sidebar.hbs
文件内容:
<div class="sidebar">
    <div class="text-center my-4">
        <h4>
            {{#if (eq loginUser.type 'admin')}}
                <a class="text-light letter-spacing" href="/dashboard">Admin Dashboard</a>
            {{else if (eq loginUser.type 'employee')}}
                <a class="text-light letter-spacing" href="/employee/dashboard">Employee Dashboard</a>
            {{/if}}
        </h4>
    </div>
    {{#if (eq loginUser.type 'admin')}}
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/admin/addDish">Add New Dish</a></h4>
        </div>
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/admin/dishMenus/1">Show Food Table</a></h4>
        </div>
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/admin/adminOrder/1">User Orders</a></h4>
        </div>
    {{/if}}

    {{#if (eq loginUser.type 'employee')}}
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/employee/orders/1">Manage Orders</a></h4>
        </div>
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/employee/history/1">Order History</a></h4>
        </div>
        <div class="text-center my-4">
            <h4><a class="text-light letter-spacing" href="/employee/markOutOfStock">Mark Out-of-Stock</a></h4>
        </div>
    {{/if}}

    <div class="text-center my-4">
        <h4><a class="text-light letter-spacing" href="/logout">Logout</a></h4>
    </div>
</div>

<!-- Register Handlebars Helper for Equality Check -->
<script>
    // Assuming you have registered a helper named 'eq' in handlebar.js
</script>

==================================================
文件路径: src\views\partials\userBar.hbs
文件名: userBar.hbs
文件内容:
<ul class="nav justify-content-center userNavBar text-center">
    <li class="nav-item">
        <a class="nav-link text-light" aria-current="page" href="/dashboard">Profile</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" aria-current="page" href="/user/orders">Orders</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" aria-current="page" href="/user/orderFood">Basket</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" aria-current="page" href="/user/history">History</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" aria-current="page" href="/logout">Logout</a>
    </li>
</ul>

==================================================
